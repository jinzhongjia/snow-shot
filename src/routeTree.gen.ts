/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as NoLayoutRouteRouteImport } from './routes/_noLayout/route'
import { Route as LayoutRouteRouteImport } from './routes/_layout/route'
import { Route as LayoutPersonalizationAppearanceRouteImport } from './routes/_layout/personalization/appearance'

const LayoutIndexLazyRouteImport = createFileRoute('/_layout/')()
const NoLayoutVideoRecordToolbarLazyRouteImport = createFileRoute(
  '/_noLayout/videoRecordToolbar',
)()
const NoLayoutVideoRecordLazyRouteImport = createFileRoute(
  '/_noLayout/videoRecord',
)()
const NoLayoutIdleLazyRouteImport = createFileRoute('/_noLayout/idle')()
const NoLayoutFullScreenDrawSwitchMouseThroughLazyRouteImport = createFileRoute(
  '/_noLayout/fullScreenDrawSwitchMouseThrough',
)()
const NoLayoutFullScreenDrawLazyRouteImport = createFileRoute(
  '/_noLayout/fullScreenDraw',
)()
const NoLayoutFixedContentLazyRouteImport = createFileRoute(
  '/_noLayout/fixedContent',
)()
const NoLayoutDrawLazyRouteImport = createFileRoute('/_noLayout/draw')()
const LayoutAboutLazyRouteImport = createFileRoute('/_layout/about')()
const LayoutToolsTranslationLazyRouteImport = createFileRoute(
  '/_layout/tools/translation',
)()
const LayoutToolsChatLazyRouteImport = createFileRoute('/_layout/tools/chat')()
const LayoutToolsCaptureHistoryLazyRouteImport = createFileRoute(
  '/_layout/tools/captureHistory',
)()
const LayoutSettingsSystemSettingsLazyRouteImport = createFileRoute(
  '/_layout/settings/systemSettings',
)()
const LayoutSettingsHotKeySettingsLazyRouteImport = createFileRoute(
  '/_layout/settings/hotKeySettings',
)()
const LayoutSettingsGeneralSettingsLazyRouteImport = createFileRoute(
  '/_layout/settings/generalSettings',
)()
const LayoutSettingsFunctionSettingsLazyRouteImport = createFileRoute(
  '/_layout/settings/functionSettings',
)()
const LayoutPersonalizationPluginsLazyRouteImport = createFileRoute(
  '/_layout/personalization/plugins',
)()

const NoLayoutRouteRoute = NoLayoutRouteRouteImport.update({
  id: '/_noLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRouteRoute = LayoutRouteRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexLazyRoute = LayoutIndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any).lazy(() => import('./routes/_layout/index.lazy').then((d) => d.Route))
const NoLayoutVideoRecordToolbarLazyRoute =
  NoLayoutVideoRecordToolbarLazyRouteImport.update({
    id: '/videoRecordToolbar',
    path: '/videoRecordToolbar',
    getParentRoute: () => NoLayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_noLayout/videoRecordToolbar.lazy').then((d) => d.Route),
  )
const NoLayoutVideoRecordLazyRoute = NoLayoutVideoRecordLazyRouteImport.update({
  id: '/videoRecord',
  path: '/videoRecord',
  getParentRoute: () => NoLayoutRouteRoute,
} as any).lazy(() =>
  import('./routes/_noLayout/videoRecord.lazy').then((d) => d.Route),
)
const NoLayoutIdleLazyRoute = NoLayoutIdleLazyRouteImport.update({
  id: '/idle',
  path: '/idle',
  getParentRoute: () => NoLayoutRouteRoute,
} as any).lazy(() =>
  import('./routes/_noLayout/idle.lazy').then((d) => d.Route),
)
const NoLayoutFullScreenDrawSwitchMouseThroughLazyRoute =
  NoLayoutFullScreenDrawSwitchMouseThroughLazyRouteImport.update({
    id: '/fullScreenDrawSwitchMouseThrough',
    path: '/fullScreenDrawSwitchMouseThrough',
    getParentRoute: () => NoLayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_noLayout/fullScreenDrawSwitchMouseThrough.lazy').then(
      (d) => d.Route,
    ),
  )
const NoLayoutFullScreenDrawLazyRoute =
  NoLayoutFullScreenDrawLazyRouteImport.update({
    id: '/fullScreenDraw',
    path: '/fullScreenDraw',
    getParentRoute: () => NoLayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_noLayout/fullScreenDraw.lazy').then((d) => d.Route),
  )
const NoLayoutFixedContentLazyRoute =
  NoLayoutFixedContentLazyRouteImport.update({
    id: '/fixedContent',
    path: '/fixedContent',
    getParentRoute: () => NoLayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_noLayout/fixedContent.lazy').then((d) => d.Route),
  )
const NoLayoutDrawLazyRoute = NoLayoutDrawLazyRouteImport.update({
  id: '/draw',
  path: '/draw',
  getParentRoute: () => NoLayoutRouteRoute,
} as any).lazy(() =>
  import('./routes/_noLayout/draw.lazy').then((d) => d.Route),
)
const LayoutAboutLazyRoute = LayoutAboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRouteRoute,
} as any).lazy(() => import('./routes/_layout/about.lazy').then((d) => d.Route))
const LayoutToolsTranslationLazyRoute =
  LayoutToolsTranslationLazyRouteImport.update({
    id: '/tools/translation',
    path: '/tools/translation',
    getParentRoute: () => LayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_layout/tools/translation.lazy').then((d) => d.Route),
  )
const LayoutToolsChatLazyRoute = LayoutToolsChatLazyRouteImport.update({
  id: '/tools/chat',
  path: '/tools/chat',
  getParentRoute: () => LayoutRouteRoute,
} as any).lazy(() =>
  import('./routes/_layout/tools/chat.lazy').then((d) => d.Route),
)
const LayoutToolsCaptureHistoryLazyRoute =
  LayoutToolsCaptureHistoryLazyRouteImport.update({
    id: '/tools/captureHistory',
    path: '/tools/captureHistory',
    getParentRoute: () => LayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_layout/tools/captureHistory.lazy').then((d) => d.Route),
  )
const LayoutSettingsSystemSettingsLazyRoute =
  LayoutSettingsSystemSettingsLazyRouteImport.update({
    id: '/settings/systemSettings',
    path: '/settings/systemSettings',
    getParentRoute: () => LayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_layout/settings/systemSettings.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutSettingsHotKeySettingsLazyRoute =
  LayoutSettingsHotKeySettingsLazyRouteImport.update({
    id: '/settings/hotKeySettings',
    path: '/settings/hotKeySettings',
    getParentRoute: () => LayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_layout/settings/hotKeySettings.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutSettingsGeneralSettingsLazyRoute =
  LayoutSettingsGeneralSettingsLazyRouteImport.update({
    id: '/settings/generalSettings',
    path: '/settings/generalSettings',
    getParentRoute: () => LayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_layout/settings/generalSettings.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutSettingsFunctionSettingsLazyRoute =
  LayoutSettingsFunctionSettingsLazyRouteImport.update({
    id: '/settings/functionSettings',
    path: '/settings/functionSettings',
    getParentRoute: () => LayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_layout/settings/functionSettings.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutPersonalizationPluginsLazyRoute =
  LayoutPersonalizationPluginsLazyRouteImport.update({
    id: '/personalization/plugins',
    path: '/personalization/plugins',
    getParentRoute: () => LayoutRouteRoute,
  } as any).lazy(() =>
    import('./routes/_layout/personalization/plugins.lazy').then(
      (d) => d.Route,
    ),
  )
const LayoutPersonalizationAppearanceRoute =
  LayoutPersonalizationAppearanceRouteImport.update({
    id: '/personalization/appearance',
    path: '/personalization/appearance',
    getParentRoute: () => LayoutRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/about': typeof LayoutAboutLazyRoute
  '/draw': typeof NoLayoutDrawLazyRoute
  '/fixedContent': typeof NoLayoutFixedContentLazyRoute
  '/fullScreenDraw': typeof NoLayoutFullScreenDrawLazyRoute
  '/fullScreenDrawSwitchMouseThrough': typeof NoLayoutFullScreenDrawSwitchMouseThroughLazyRoute
  '/idle': typeof NoLayoutIdleLazyRoute
  '/videoRecord': typeof NoLayoutVideoRecordLazyRoute
  '/videoRecordToolbar': typeof NoLayoutVideoRecordToolbarLazyRoute
  '/': typeof LayoutIndexLazyRoute
  '/personalization/appearance': typeof LayoutPersonalizationAppearanceRoute
  '/personalization/plugins': typeof LayoutPersonalizationPluginsLazyRoute
  '/settings/functionSettings': typeof LayoutSettingsFunctionSettingsLazyRoute
  '/settings/generalSettings': typeof LayoutSettingsGeneralSettingsLazyRoute
  '/settings/hotKeySettings': typeof LayoutSettingsHotKeySettingsLazyRoute
  '/settings/systemSettings': typeof LayoutSettingsSystemSettingsLazyRoute
  '/tools/captureHistory': typeof LayoutToolsCaptureHistoryLazyRoute
  '/tools/chat': typeof LayoutToolsChatLazyRoute
  '/tools/translation': typeof LayoutToolsTranslationLazyRoute
}
export interface FileRoutesByTo {
  '/about': typeof LayoutAboutLazyRoute
  '/draw': typeof NoLayoutDrawLazyRoute
  '/fixedContent': typeof NoLayoutFixedContentLazyRoute
  '/fullScreenDraw': typeof NoLayoutFullScreenDrawLazyRoute
  '/fullScreenDrawSwitchMouseThrough': typeof NoLayoutFullScreenDrawSwitchMouseThroughLazyRoute
  '/idle': typeof NoLayoutIdleLazyRoute
  '/videoRecord': typeof NoLayoutVideoRecordLazyRoute
  '/videoRecordToolbar': typeof NoLayoutVideoRecordToolbarLazyRoute
  '/': typeof LayoutIndexLazyRoute
  '/personalization/appearance': typeof LayoutPersonalizationAppearanceRoute
  '/personalization/plugins': typeof LayoutPersonalizationPluginsLazyRoute
  '/settings/functionSettings': typeof LayoutSettingsFunctionSettingsLazyRoute
  '/settings/generalSettings': typeof LayoutSettingsGeneralSettingsLazyRoute
  '/settings/hotKeySettings': typeof LayoutSettingsHotKeySettingsLazyRoute
  '/settings/systemSettings': typeof LayoutSettingsSystemSettingsLazyRoute
  '/tools/captureHistory': typeof LayoutToolsCaptureHistoryLazyRoute
  '/tools/chat': typeof LayoutToolsChatLazyRoute
  '/tools/translation': typeof LayoutToolsTranslationLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteRouteWithChildren
  '/_noLayout': typeof NoLayoutRouteRouteWithChildren
  '/_layout/about': typeof LayoutAboutLazyRoute
  '/_noLayout/draw': typeof NoLayoutDrawLazyRoute
  '/_noLayout/fixedContent': typeof NoLayoutFixedContentLazyRoute
  '/_noLayout/fullScreenDraw': typeof NoLayoutFullScreenDrawLazyRoute
  '/_noLayout/fullScreenDrawSwitchMouseThrough': typeof NoLayoutFullScreenDrawSwitchMouseThroughLazyRoute
  '/_noLayout/idle': typeof NoLayoutIdleLazyRoute
  '/_noLayout/videoRecord': typeof NoLayoutVideoRecordLazyRoute
  '/_noLayout/videoRecordToolbar': typeof NoLayoutVideoRecordToolbarLazyRoute
  '/_layout/': typeof LayoutIndexLazyRoute
  '/_layout/personalization/appearance': typeof LayoutPersonalizationAppearanceRoute
  '/_layout/personalization/plugins': typeof LayoutPersonalizationPluginsLazyRoute
  '/_layout/settings/functionSettings': typeof LayoutSettingsFunctionSettingsLazyRoute
  '/_layout/settings/generalSettings': typeof LayoutSettingsGeneralSettingsLazyRoute
  '/_layout/settings/hotKeySettings': typeof LayoutSettingsHotKeySettingsLazyRoute
  '/_layout/settings/systemSettings': typeof LayoutSettingsSystemSettingsLazyRoute
  '/_layout/tools/captureHistory': typeof LayoutToolsCaptureHistoryLazyRoute
  '/_layout/tools/chat': typeof LayoutToolsChatLazyRoute
  '/_layout/tools/translation': typeof LayoutToolsTranslationLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/draw'
    | '/fixedContent'
    | '/fullScreenDraw'
    | '/fullScreenDrawSwitchMouseThrough'
    | '/idle'
    | '/videoRecord'
    | '/videoRecordToolbar'
    | '/'
    | '/personalization/appearance'
    | '/personalization/plugins'
    | '/settings/functionSettings'
    | '/settings/generalSettings'
    | '/settings/hotKeySettings'
    | '/settings/systemSettings'
    | '/tools/captureHistory'
    | '/tools/chat'
    | '/tools/translation'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/draw'
    | '/fixedContent'
    | '/fullScreenDraw'
    | '/fullScreenDrawSwitchMouseThrough'
    | '/idle'
    | '/videoRecord'
    | '/videoRecordToolbar'
    | '/'
    | '/personalization/appearance'
    | '/personalization/plugins'
    | '/settings/functionSettings'
    | '/settings/generalSettings'
    | '/settings/hotKeySettings'
    | '/settings/systemSettings'
    | '/tools/captureHistory'
    | '/tools/chat'
    | '/tools/translation'
  id:
    | '__root__'
    | '/_layout'
    | '/_noLayout'
    | '/_layout/about'
    | '/_noLayout/draw'
    | '/_noLayout/fixedContent'
    | '/_noLayout/fullScreenDraw'
    | '/_noLayout/fullScreenDrawSwitchMouseThrough'
    | '/_noLayout/idle'
    | '/_noLayout/videoRecord'
    | '/_noLayout/videoRecordToolbar'
    | '/_layout/'
    | '/_layout/personalization/appearance'
    | '/_layout/personalization/plugins'
    | '/_layout/settings/functionSettings'
    | '/_layout/settings/generalSettings'
    | '/_layout/settings/hotKeySettings'
    | '/_layout/settings/systemSettings'
    | '/_layout/tools/captureHistory'
    | '/_layout/tools/chat'
    | '/_layout/tools/translation'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
  NoLayoutRouteRoute: typeof NoLayoutRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_noLayout': {
      id: '/_noLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NoLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_noLayout/videoRecordToolbar': {
      id: '/_noLayout/videoRecordToolbar'
      path: '/videoRecordToolbar'
      fullPath: '/videoRecordToolbar'
      preLoaderRoute: typeof NoLayoutVideoRecordToolbarLazyRouteImport
      parentRoute: typeof NoLayoutRouteRoute
    }
    '/_noLayout/videoRecord': {
      id: '/_noLayout/videoRecord'
      path: '/videoRecord'
      fullPath: '/videoRecord'
      preLoaderRoute: typeof NoLayoutVideoRecordLazyRouteImport
      parentRoute: typeof NoLayoutRouteRoute
    }
    '/_noLayout/idle': {
      id: '/_noLayout/idle'
      path: '/idle'
      fullPath: '/idle'
      preLoaderRoute: typeof NoLayoutIdleLazyRouteImport
      parentRoute: typeof NoLayoutRouteRoute
    }
    '/_noLayout/fullScreenDrawSwitchMouseThrough': {
      id: '/_noLayout/fullScreenDrawSwitchMouseThrough'
      path: '/fullScreenDrawSwitchMouseThrough'
      fullPath: '/fullScreenDrawSwitchMouseThrough'
      preLoaderRoute: typeof NoLayoutFullScreenDrawSwitchMouseThroughLazyRouteImport
      parentRoute: typeof NoLayoutRouteRoute
    }
    '/_noLayout/fullScreenDraw': {
      id: '/_noLayout/fullScreenDraw'
      path: '/fullScreenDraw'
      fullPath: '/fullScreenDraw'
      preLoaderRoute: typeof NoLayoutFullScreenDrawLazyRouteImport
      parentRoute: typeof NoLayoutRouteRoute
    }
    '/_noLayout/fixedContent': {
      id: '/_noLayout/fixedContent'
      path: '/fixedContent'
      fullPath: '/fixedContent'
      preLoaderRoute: typeof NoLayoutFixedContentLazyRouteImport
      parentRoute: typeof NoLayoutRouteRoute
    }
    '/_noLayout/draw': {
      id: '/_noLayout/draw'
      path: '/draw'
      fullPath: '/draw'
      preLoaderRoute: typeof NoLayoutDrawLazyRouteImport
      parentRoute: typeof NoLayoutRouteRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/tools/translation': {
      id: '/_layout/tools/translation'
      path: '/tools/translation'
      fullPath: '/tools/translation'
      preLoaderRoute: typeof LayoutToolsTranslationLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/tools/chat': {
      id: '/_layout/tools/chat'
      path: '/tools/chat'
      fullPath: '/tools/chat'
      preLoaderRoute: typeof LayoutToolsChatLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/tools/captureHistory': {
      id: '/_layout/tools/captureHistory'
      path: '/tools/captureHistory'
      fullPath: '/tools/captureHistory'
      preLoaderRoute: typeof LayoutToolsCaptureHistoryLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/settings/systemSettings': {
      id: '/_layout/settings/systemSettings'
      path: '/settings/systemSettings'
      fullPath: '/settings/systemSettings'
      preLoaderRoute: typeof LayoutSettingsSystemSettingsLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/settings/hotKeySettings': {
      id: '/_layout/settings/hotKeySettings'
      path: '/settings/hotKeySettings'
      fullPath: '/settings/hotKeySettings'
      preLoaderRoute: typeof LayoutSettingsHotKeySettingsLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/settings/generalSettings': {
      id: '/_layout/settings/generalSettings'
      path: '/settings/generalSettings'
      fullPath: '/settings/generalSettings'
      preLoaderRoute: typeof LayoutSettingsGeneralSettingsLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/settings/functionSettings': {
      id: '/_layout/settings/functionSettings'
      path: '/settings/functionSettings'
      fullPath: '/settings/functionSettings'
      preLoaderRoute: typeof LayoutSettingsFunctionSettingsLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/personalization/plugins': {
      id: '/_layout/personalization/plugins'
      path: '/personalization/plugins'
      fullPath: '/personalization/plugins'
      preLoaderRoute: typeof LayoutPersonalizationPluginsLazyRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/personalization/appearance': {
      id: '/_layout/personalization/appearance'
      path: '/personalization/appearance'
      fullPath: '/personalization/appearance'
      preLoaderRoute: typeof LayoutPersonalizationAppearanceRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
  }
}

interface LayoutRouteRouteChildren {
  LayoutAboutLazyRoute: typeof LayoutAboutLazyRoute
  LayoutIndexLazyRoute: typeof LayoutIndexLazyRoute
  LayoutPersonalizationAppearanceRoute: typeof LayoutPersonalizationAppearanceRoute
  LayoutPersonalizationPluginsLazyRoute: typeof LayoutPersonalizationPluginsLazyRoute
  LayoutSettingsFunctionSettingsLazyRoute: typeof LayoutSettingsFunctionSettingsLazyRoute
  LayoutSettingsGeneralSettingsLazyRoute: typeof LayoutSettingsGeneralSettingsLazyRoute
  LayoutSettingsHotKeySettingsLazyRoute: typeof LayoutSettingsHotKeySettingsLazyRoute
  LayoutSettingsSystemSettingsLazyRoute: typeof LayoutSettingsSystemSettingsLazyRoute
  LayoutToolsCaptureHistoryLazyRoute: typeof LayoutToolsCaptureHistoryLazyRoute
  LayoutToolsChatLazyRoute: typeof LayoutToolsChatLazyRoute
  LayoutToolsTranslationLazyRoute: typeof LayoutToolsTranslationLazyRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutAboutLazyRoute: LayoutAboutLazyRoute,
  LayoutIndexLazyRoute: LayoutIndexLazyRoute,
  LayoutPersonalizationAppearanceRoute: LayoutPersonalizationAppearanceRoute,
  LayoutPersonalizationPluginsLazyRoute: LayoutPersonalizationPluginsLazyRoute,
  LayoutSettingsFunctionSettingsLazyRoute:
    LayoutSettingsFunctionSettingsLazyRoute,
  LayoutSettingsGeneralSettingsLazyRoute:
    LayoutSettingsGeneralSettingsLazyRoute,
  LayoutSettingsHotKeySettingsLazyRoute: LayoutSettingsHotKeySettingsLazyRoute,
  LayoutSettingsSystemSettingsLazyRoute: LayoutSettingsSystemSettingsLazyRoute,
  LayoutToolsCaptureHistoryLazyRoute: LayoutToolsCaptureHistoryLazyRoute,
  LayoutToolsChatLazyRoute: LayoutToolsChatLazyRoute,
  LayoutToolsTranslationLazyRoute: LayoutToolsTranslationLazyRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

interface NoLayoutRouteRouteChildren {
  NoLayoutDrawLazyRoute: typeof NoLayoutDrawLazyRoute
  NoLayoutFixedContentLazyRoute: typeof NoLayoutFixedContentLazyRoute
  NoLayoutFullScreenDrawLazyRoute: typeof NoLayoutFullScreenDrawLazyRoute
  NoLayoutFullScreenDrawSwitchMouseThroughLazyRoute: typeof NoLayoutFullScreenDrawSwitchMouseThroughLazyRoute
  NoLayoutIdleLazyRoute: typeof NoLayoutIdleLazyRoute
  NoLayoutVideoRecordLazyRoute: typeof NoLayoutVideoRecordLazyRoute
  NoLayoutVideoRecordToolbarLazyRoute: typeof NoLayoutVideoRecordToolbarLazyRoute
}

const NoLayoutRouteRouteChildren: NoLayoutRouteRouteChildren = {
  NoLayoutDrawLazyRoute: NoLayoutDrawLazyRoute,
  NoLayoutFixedContentLazyRoute: NoLayoutFixedContentLazyRoute,
  NoLayoutFullScreenDrawLazyRoute: NoLayoutFullScreenDrawLazyRoute,
  NoLayoutFullScreenDrawSwitchMouseThroughLazyRoute:
    NoLayoutFullScreenDrawSwitchMouseThroughLazyRoute,
  NoLayoutIdleLazyRoute: NoLayoutIdleLazyRoute,
  NoLayoutVideoRecordLazyRoute: NoLayoutVideoRecordLazyRoute,
  NoLayoutVideoRecordToolbarLazyRoute: NoLayoutVideoRecordToolbarLazyRoute,
}

const NoLayoutRouteRouteWithChildren = NoLayoutRouteRoute._addFileChildren(
  NoLayoutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
  NoLayoutRouteRoute: NoLayoutRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
